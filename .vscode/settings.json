// 将设置放入此文件中以覆盖默认设置
{
  // VSCode的插件beautify的配置规则
  "beautify.config": {
    // 配置JS解构对象是否换行
    "brace_style": "collapse,preserve-inline", // "collapse", "expand", "end-expand", "none", "collapse,preserve-inline", "expand,preserve-inline", "end-expand,preserve-inline", or "none,preserve-inline"
    "wrap_attributes": "auto", // 属性换行
    "indent_size": 2, // tab缩进
    "jslint_happy": true // JS代码是否正确
  },
  /*  prettier的配置 */
  "prettier.printWidth": 200, // 超过最大值换行
  "prettier.tabWidth": 2, // 缩进字节数
  "prettier.useTabs": false, // 缩进不使用tab，使用空格
  "prettier.semi": true, // 句尾添加分号
  "prettier.singleQuote": false, // 使用单引号代替双引号
  "prettier.arrowParens": "avoid", //  (x) => {} 箭头函数参数只有一个时是否要有小括号。avoid：省略括号
  "prettier.bracketSpacing": true, // 在对象，数组括号与文字之间加空格 "{ foo: bar }"
  "prettier.disableLanguages": [
    "vue"
  ], // 不格式化vue文件，vue文件的格式化单独设置,使用vetur
  "prettier.endOfLine": "auto", // 结尾是 \n \r \n\r auto
  "prettier.htmlWhitespaceSensitivity": "ignore",
  "prettier.ignorePath": ".prettierignore", // 不使用prettier格式化的文件填写在项目的.prettierignore文件中
  "prettier.jsxBracketSameLine": false, // 在jsx中把'>' 是否单独放一行
  "prettier.jsxSingleQuote": false, // 在jsx中使用单引号代替双引号
  "prettier.requireConfig": false, // Require a 'prettierconfig' to format prettier
  "prettier.trailingComma": "none", // 在对象或数组最后一个元素后面是否加逗号（在ES5中加尾逗号）
  "vetur.format.defaultFormatter.js": "prettier", // [ none, prettier, prettier-eslint, vscode-typescript ]
  "vetur.format.defaultFormatter.less": "prettier",
  "vetur.format.defaultFormatter.html": "js-beautify-html", // [prettyhtml, js-beautify-html]
  "vetur.format.defaultFormatterOptions": {
    "prettier": {
      "singleQuote": false, // 单引号
      "semi": true, // 分号结尾
      "printWidth": 200, // 换行字符串阈值
      "arrowParens": "avoid", // (x) => {} 箭头函数参数只有一个时是否要有小括号。avoid：省略括号
      "bracketSpacing": true, // 在对象，数组括号与文字之间加空格 "{ foo: bar }"
      "jsxBracketSameLine": false, // 在jsx中把'>' 是否单独放一行
      "jsxSingleQuote": false, // 在jsx中使用单引号代替双引号
      "trailingComma": "none" // 在对象或数组最后一个元素后面是否加逗号（在ES5中加尾逗号）
    },
    "js-beautify-html": {
      "wrap_attributes": "auto" // 仅在超出长度时才对属性进行换行
    }
  },
  "[css]": {
    "editor.defaultFormatter": "michelemelluso.code-beautifier"
  },
  "[html]": {
    "editor.defaultFormatter": "HookyQR.beautify"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "HookyQR.beautify"
  },
  "[markdown]": {
    "editor.defaultFormatter": "fcrespo82.markdown-table-formatter"
  }, // vetur的eslint语法检查
  "[vue]": {
    "editor.defaultFormatter": "octref.vetur"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[less]": {
    "editor.defaultFormatter": "michelemelluso.code-beautifier"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  // Markdown 语法检查配置
  "markdownlint.config": {
    "default": true,
    "MD033": {
      // 允许的标签
      "allowed_elements": [
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "p",
        "span",
        "a",
        "img",
        "details",
        "summary",
        "progress"
      ]
    },
    "MD024": {
      "allow_different_nesting": true // 允许嵌套相同的标题
    }
  }
}